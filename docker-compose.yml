version: "3.8"

services:
  haproxy:
    image: haproxy:latest
    container_name: haproxy
    hostname: haproxy
    env_file: ./.env
    restart: always
    volumes:
      - ./haproxy/haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
      - certificates:/usr/local/etc/haproxy/certificates:ro
    networks:
      - default
      - hapnet
    ports:
      - "80:80"
      - "443:443"
      - "4001:4001" # These ports
      - "9096:9096" # are for
      - "9097:9097" # ipfs
      - "9999"
  certbot:
    container_name: certbot
    build: 
      context: ./certbot
      args:
        - DO_TOKEN=${DIGITALOCEAN_TOKEN}
    hostname: certbot
    env_file: ./.env
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do . /etc/scripts/renew-certificates.sh ; sleep 12h & wait $${!}; done;'"
    restart: always
    volumes:
      - certificates:/etc/certificates
    networks:
      - default
      - hapnet
    ports:
      - "380:380"
    secrets:
      - digitalocean_token
  ipfs0:
    container_name: ipfs0
    build: ./ipfs-cluster/gateway
    env_file: ./.env
    environment:
      - IPFS_PROFILE=server
    ports:
    # Swarm listens on all interfaces, so is remotely reachable.
      - "4001:4001/tcp"
      - "4001:4001/udp"
      # note: do not expose 5001 to the internet
      - "5001:5001" # ipfs api - expose if needed/wanted
      - "8080:8080" # ipfs gateway - expose if needed/wanted
    networks:
      - hapnet
    volumes:
      - ${IPFS_CLUSTER_DATADIR}/ipfs-cluster/ipfs0:/data/ipfs
  cluster0:
    container_name: cluster0
    image: ipfs/ipfs-cluster:latest
    depends_on:
      - ipfs0
    hostname: cluster0
    environment:
      CLUSTER_PEERNAME: cluster0
      CLUSTER_PEERADDRESSES: /ip4/${IPFS_GATEWAY_IP}/tcp/9096/p2p/${IPFS_CLUSTER_PEER}
      CLUSTER_SECRET: ${CLUSTER_SECRET} # From shell variable if set
      CLUSTER_IPFSHTTP_NODEMULTIADDRESS: /dns4/ipfs0/tcp/5001
      CLUSTER_CRDT_TRUSTEDPEERS: '*' # Trust all peers in Cluster
      CLUSTER_RESTAPI_HTTPLISTENMULTIADDRESS: /ip4/0.0.0.0/tcp/9094 # Expose API
      # CLUSTER_PINSVCAPI_SSLCERTFILE: ./certificates/${DOMAIN_URL}.pem
      CLUSTER_MONITORPINGINTERVAL: 2s # Speed up peer discovery
    ports:
          # Open API port (allows ipfs-cluster-ctl usage)
         # - "9094:9094"
          - "9096:9096" # Cluster switch endpoint
         # - "9097:9097" # Cluster pinning service enpoint
          # note: do not expose 9095 to the internet
          # - "9095:9095" # Cluster IPFS Proxy endpoint
    networks:
      - hapnet
    volumes:
      - ${IPFS_CLUSTER_DATADIR}/ipfs-cluster/cluster0:/data/ipfs-cluster
      - certificates:/data/ipfs-cluster/certificates
  nextjs-app:
    build: ./nextjs-docker
    container_name: nextjs-app
    hostname: nextjs
    restart: unless-stopped
    stdin_open: true
    tty: true
    ports:
      - 3000:3000
    networks:
      - hapnet

networks:
  hapnet:
    name: hapnet
    driver: bridge
    internal: true

volumes:
  certificates:

secrets:
  digitalocean_token:
    file: ./digitalocean.ini