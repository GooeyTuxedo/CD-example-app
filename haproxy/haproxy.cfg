global
    log stdout format raw local0
    log stdout format raw local1 notice
    # Enable HAProxy runtime API
    stats socket :9999 level admin expose-fd listeners
    stats timeout 30s
    maxconn 100
    daemon

    # See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
    ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
    ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
    ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

    tune.ssl.default-dh-param 2048

defaults
    log global
    mode http
    timeout connect  4s
    timeout http-request  1s
    timeout http-keep-alive  120s
    timeout client  1m
    timeout server  1m
    timeout queue  10s
    option httplog
    option dontlognull
    option splice-auto
    option tcp-smart-accept
    option tcp-smart-connect
    option forwardfor
    option http-keep-alive
    
    http-reuse safe

frontend NEXTJS-RECEIVER
    bind *:80
    bind *:443 ssl crt "/usr/local/etc/haproxy/certificates/${DOMAIN_URL}.pem"
    http-request redirect scheme https unless { ssl_fc }

    use_backend letsencrypt-backend if { path_beg /.well-known/acme-challenge/ }

    acl is_ipfs hdr_beg(host) -i ipfs.
    acl is_ipns hdr_beg(host) -i ipns.
    acl is_pinsvc hdr_beg(host) -i pin.
    acl is_ipfs_subdomain hdr(host) -m reg -i ^.*\.ipfs\.
    acl is_ipns_subdomain hdr(host) -m reg -i ^.*\.ipns\.
    acl is_nextcloud hdr(host) -i "${MAIL_SERVER_DOMAIN}"

    use_backend ipfs-gateway if is_ipfs or is_ipns
    use_backend ipfs-subdomain-gateway if is_ipfs_subdomain or is_ipns_subdomain
    use_backend ipfs-pinning-svc if is_pinsvc
    use_backend nextcloud-backend if is_nextcloud

    default_backend NEXTJS

backend letsencrypt-backend
    server certbot certbot:380

backend ipfs-gateway
    mode http
    option forwardfor
    http-request set-header X-Forwarded-Host ${DOMAIN_URL}
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    server ipfs0 "${IPFS_GATEWAY_IP}:8080" check

backend ipfs-subdomain-gateway
    mode http
    option forwardfor
    http-request set-header Host %[hdr(host)]
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    server ipfs0 "${IPFS_GATEWAY_IP}:8080" check

backend nextcloud-backend
    mode http
    balance source
    option forwardfor
    http-request set-header X-Forwarded-Host "${MAIL_SERVER_DOMAIN}"
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request add-header X-Forwarded-Proto https if { ssl_fc }
    server nextcloud "${NEXTCLOUD_IP}:11000" check

listen ipfs-switch
    bind *:4001
    mode tcp
    server ipfs0 "${IPFS_GATEWAY_IP}:4001" check

backend ipfs-pinning-svc
  mode http
  log global
  option forwardfor
  option http-server-close
  http-request set-header X-Forwarded-Port %[dst_port]
  http-request set-header X-Forwarded-Proto https if { ssl_fc }
  server cluster1 "${IPFS_GATEWAY_IP}:9097" check inter 1000

backend NEXTJS
    mode http
    server nextjs-app nextjs:3000

